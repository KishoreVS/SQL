1
1. select staff_name as EmployeeName,design_code as designationCode from staff_master where hiredate<'01-jan-2003' and staff_sal between 12000 and 25000;
2. select staff_code,staff_name,dept_code from staff_master where round(months_between(sysdate,hiredate))>216;
3. select * from staff_master where mgr_code is null;
4. select * from book_master where book_pub_year between 2001 and 2004 and book_name like '%&%';
5. select staff_name from staff_master where staff_name like '%\_%' escape '\';


2.1
1.  select staff_name, LPAD(staff_sal, 15, '$') staff_sal from staff_master;
2.  SELECT STUDENT_NAME,to_char(student_dob,'MONTH, DD YYYY') as DATEOFBIRTH FROM STUDENT_MASTER where to_char(student_dob,'DAY') 
	like '%SUNDAY%' or to_char(student_dob,'DAY') like '%SATURDAY%';
3.  SELECT STAFF_NAME,ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED FROM STAFF_MASTER order by months_worked;
4.  SELECT * FROM STAFF_MASTER WHERE TO_CHAR(HIREDATE,'DD') BETWEEN 1 AND 15 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%DECEMBER%' ;
5.  SELECT STAFF_NAME,STAFF_SAL, CASE WHEN STAFF_SAL >=50000 THEN 'A'WHEN STAFF_SAL  >25000 AND  STAFF_SAL<50000 THEN 'B' WHEN 
	STAFF_SAL  >10000 AND  STAFF_SAL<25000 THEN 'C' ELSE 'D' END as GRADE from STAFF_MASTER;
6.  SELECT STAFF_NAME,TO_CHAR(HIREDATE,'DD MONTH YYYY') AS HIRE_DATE,TO_CHAR(HIREDATE,'DAY')AS DAY FROM STAFF_MASTER 
	ORDER BY (NEXT_DAY(HIREDATE, 'MONDAY') - HIREDATE) DESC;
7.  SELECT INSTR('Mississippi','i',2,3) AS POSITION FROM DUAL;
8.  select to_char(next_day((last_day(sysdate))-7,'Friday'),'DDSPTH "of" MONTH,yyyy') as "Pay Date" from dual;
9.  SELECT STUDENT_CODE,STUDENT_NAME,DECODE(DEPT_CODE,20,'ELECTRICALS',30,'ELECTRONICS','OTHERS') AS DEPT_NAME FROM STUDENT_MASTER;

2.2
1.  select max(staff_sal) as Maximum,min(staff_sal) as minimum,sum(staff_sal) as total,round (avg(staff_sal)) as average from staff_master group by dept_code;
2.  select deptno,count(empno) as "Total number of managers" from emp where job='MANAGER' group by deptno;
3.  select deptno,sum(sal) from emp where job!='MANAGER' group by deptno having sum(sal)>20000;

3.1
1.  select staff_name,d.dept_code,dept_name from staff_master s inner join department_master d on s.dept_code=d.dept_code and staff_sal>20000;
2.  select s1.staff_code as staff#,s1.staff_name as staff,s1.mgr_code as mgr#,s2.staff_name as manager,d.dept_name from staff_master s1 , staff_master s2,department_master d where s1.mgr_code=s2.staff_code and s1.dept_code=d.dept_code;
3.  select s1.student_code,s1.student_name,b1.book_code,bm.book_name from student_master s1 inner join book_transactions b1 on s1.student_code=b1.student_code inner join book_master bm on bm.book_code=b1.book_code and b1.Book_expected_return_date=sysdate;
4.  select s1.staff_code,s1.staff_name,d1.dept_name,dm.design_name,b1.book_code,bm.book_name,b1.Book_issue_Date from staff_master s1 inner join department_master d1 on s1.dept_code=d1.dept_code inner join designation_master dm on s1.design_code=dm.design_code inner join book_transactions b1 on s1.staff_code=b1.staff_code inner join book_master bm on bm.book_code=b1.book_code;
5.  select s1.staff_code,s1.staff_name,dm.design_name,d1.dept_name,bt.book_code,bm.book_name,bm.book_pub_author ,5*(sysdate-book_expected_return_date) AS FINE from staff_master s1 inner join department_master d1 on s1.dept_code=d1.dept_code inner join designation_master dm on s1.design_code=dm.design_code inner join book_transactions bt on s1.staff_code=bt.staff_code inner join book_master bm on bt.book_code=bm.book_code;
6.  select staff_code,staff_name,staff_sal from staff_master where staff_sal<(select avg(staff_sal) from staff_master);
7.  SELECT BOOK_PUB_AUTHOR,BOOK_NAME FROM BOOK_MASTER WHERE BOOK_PUB_AUTHOR=(SELECT BOOK_PUB_AUTHOR FROM BOOK_MASTER GROUP BY BOOK_PUB_AUTHOR HAVING COUNT(BOOK_PUB_AUTHOR)>1);
8.  select staff_code,staff_name,dept_name from staff_master s,department_master d where s.dept_code=d.dept_code and staff_code in (select staff_code from book_transactions group by staff_code having count(staff_code)>=2);
9.  select count(student_code ),dept_code from student_master group by dept_code having count(student_code)=(select max(count(student_code)) from student_master group by dept_code);


4.1
1.  create table customer(customerid number(5),cust_name varchar2(20),Address1 varchar2(30),Address2 varchar2(30));
2.  Alter table customer rename column cust_name to customername;
	 Alter table customer modify customername  varchar2(30) Not Null;
3.  Alter table customer add Gender varchar2(1);
	 Alter table customer add Age Number(3);
	 Alter table customer add phoneNo number(10);
4.  insert into customer values(1000,'Allen','#115 Chicago','#115 Chicago','M',25,7878776);
	 insert into customer values(1001,'George','#116 France','#116 France','M',25,434524);
	 insert into customer values(1002,'Becker','#114 New York','#114 New York','M',45,431525);
5.  Alter table customer add constraints Custid_prim PRIMARY KEY (customerid);
6.  insert into customer values(1002,'John','#114 Chicago','#114 Chicago','M',45,439525);
	 ERROR:++ ERROR at line 1:
	 ORA-00001: unique constraint (SYSTEM.CUSTID_PRIM) violated
7.  Alter table customer drop constraint custId_prim;
	 insert into customer values(1002,'Becker','#114 New York','#114 New York','M',45,431525);
	 insert into customer values(1003,'Nanapatekar','#115 India','#115 India','M',45,431525);
8.  Alter table customer add constraints Custid_prim PRIMARY KEY (customerid);
	 ERROR at line 1:
	 ORA-02437: cannot validate (SYSTEM.CUSTID_PRIM) - primary key violated	
9.  alter table customer add salary number(8,2);
	 insert into customer values(1002,'Becker','#114 New York','#114 New York','M',45,431525,15000.50);
	 insert into customer values(1003,'Nanapatekar','#115 India','#115 India','M',45,431525,20000.50);
10.  TRUNCATE table customer;
11.  Alter table customer add e_mail varchar2(30);
12.  Alter table customer DROP column e_mail;
13.  create table Suppliers as (select customerid as suppid,customername as sname,address1 as addr1,address2 as addr2,phoneno as contactno from customer);
14.  create table customermaster(customerid number(5) constraint custid_pk primary key,customername varchar2(30) not null,Address1 varchar2(30) not null,		Address2 varchar2(30),Gender varchar2(1),Age number(3),phoneno number(10));
15.  Create table accountmaster(customerid number(5),Accountnumber number(10,2) Constraint acc_pk primary key,accounttype char(3),ledgerbalance number(10,2) 	   Not Null);
	  create sequence sequence_acc minvalue 1001 maxvalue 9999 start with 1001 increment by 1 cache 101;
16.  alter table Accountmaster ADD constraint cust_acc FOREIGN KEY(customerid) REFERENCES customermaster(customerid);
17.  insert into customermaster values(1000, 'Allen', '#115 Chicago', '#115 Chicago', 'M', 25, 7878776);
	  insert into customermaster values(1001, 'George', '#116 France', '#116 France', 'M', 25, 434524);
	  insert into customermaster values(1002, 'Becker', '#114 New York', '#114 New York', 'M', 25, 431525);
18.  alter table Accountmaster add constraint check_type check(accounttype='NRI' or accounttype='IND');
19.  alter table Accountmaster add constraint Balance_check check(ledgerbalance > 5000);
20.  drop table accountmaster; 
	  create table accountmaster(customerid number(5),accountnumber number(8,2),accounttype char(3), ledgerbalance number(10,2), CONSTRAINT fk_column FOREIGN KEY(customerid) REFERENCES customer(customerid) ON DELETE CASCADE);
21.  Create table accountdetails as select * from Accountmaster;
22.  CREATE VIEW Acc_view AS select Customerid,Accountnumber,AccountType,ledgerBalance from accountmaster;
23.  CREATE VIEW vAccs_Dtls AS SELECT Accounttype,ledgerbalance from Accountmaster where accounttype = 'IND' and ledgerbalance < 10000;
24.  create view accsvw10 as select * from accountmaster;
25.  CREATE sequence SEQ_DEPT minvalue 40 MAXVALUE 200 start with 40 increment by 10 cache 40;
26.  insert into department_master values(seq_dept.NEXTVAL,'Communications');
	   insert into department_master values(seq_dept.NEXTVAL,'Petroleum');
	  insert into department_master values(seq_dept.NEXTVAL,'Fabrics');
27.  DROP sequence seq_dept;
28.  CREATE INDEX no_name on emp(empno);
	   select * from emp;
29.  create SYNONYM synemp for emp;
30.  select * from synemp;
31.  CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);
32.  CREATE sequence SEQ_EMP minvalue 1001 start with 1001 increment by 1 cache 1001;


5.
1.  Create table employee as select * from emp;
     desc employee;
2.  select * from employee;
3.  update employee set job=(select job from employee where empno=7788),deptno=(select deptno from employee where empno=7788) where empno=7698;
4.  delete from department where dept_name='SALES';
5.  update employee set empno=7788 where empno=7698;
6.  insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1000,'Allen', 'Clerk',1001,'12-jan-01', 3000, 2,10);
	  insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1001,'George', 'Analyst',null,'08-sep-1992', 5000, 0,10);
	 insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1002,'Becker', 'Manager',1000,'04-nov-1992', 2800, 4,20);
	 insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1003,'Bill','Clerk',1002,'04-nov-1992', 3000,0,20);
	   
	 
6.
1.  insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6000, 'John','#115 Chicago','#115 Chicago','M',25,7878776,10000);
     insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6001, 'Jack','#116 France','#116 France','M',25,434524,20000);
	 insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6002, 'James','#114 New York','#114 New York','M',45,431525,15000.50);
2.  savepoint sp1;
3.  insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values (6003, 'John','#114 Chicago','#114 Chicago','M',45,439525,19000.60);
4.  rollback to sp1;
	  commit;
